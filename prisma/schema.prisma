generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String    @id @default(cuid())
  email              String    @unique
  name               String?
  username           String?   @unique
  bio                String?
  avatar             String?
  sessions           Session[]
  accounts           Account[]
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  onboardingComplete Boolean   @default(false)
  emailVerified      Boolean
  image              String?

  @@map("user")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())
  token     String
  updatedAt DateTime
  ipAddress String?
  userAgent String?

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @default(cuid())
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  provider              String
  providerId            String
  accessToken           String?
  refreshToken          String?
  expiresAt             Int?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  accountId             String
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?

  @@unique([provider, providerId])
  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
