generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                 String    @id @default(uuid()) // Use uuid() for Supabase compatibility
  email              String    @unique
  name               String?
  password           String? // Hashed password for email/password auth
  createdAt          DateTime  @default(now())
  emailVerified      Boolean   @default(true) // No email verification
  image              String?
  updatedAt          DateTime  @updatedAt
  sessions           Session[]
  accounts           Account[]
  onboardingComplete Boolean   @default(false)

  coverImage String? // Cover image URL
  bio        String? // User bio

  @@index([email])
  @@map("user")
}

model Session {
  id        String   @id @default(uuid()) // Use uuid() for Supabase compatibility
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id @default(uuid())
  accountId             String // GitHub user ID
  providerId            String // e.g., "github"
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([providerId, accountId])
  @@map("account")
}

model Verification {
  id         String   @id @default(uuid())
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, value])
  @@map("verification")
}
